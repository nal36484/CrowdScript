struct Puzzle {
    descr: string,
    input: string,
    output: string,
    wrong_output: string,
    explanation: string
}

function gen_puzzle(level: int) -> Puzzle {
    let xy = gen_xy(level);
    let input = gen_input(xy);
    let female_name = [["Настя ","Олеся ","Вика ","Вера ","Люба ","Кристина ","Полина ","Света ","Галя ","Маша "],
        ["Насти ","Олеси ","Вики ","Веры ","Любы ","Кристины ","Полины ","Светы ","Гали ","Маши "]];
    let i = rand_int(female_name[0].length());
    let fingers = ["мизинец левой руки","безымянный палец левой руки","средний палец левой руки","указательный палец левой руки","большой палец левой руки",
                   "мизинец правой руки","безымянный палец правой руки","средний палец правой руки","указательный палец правой руки","большой палец правой руки"];
    let header = gen_header(i, female_name);
    let task = gen_task();
    let descr = header + "баночка с лаком для ногтей, в которой осталось Х мл. Известно, что " + female_name[0][i] + "на каждый ноготь использует Y мл лака. Каждый " +
        "день она красит ногти начиная с мизинца и заканчивая большим пальцем, начиная с левой руки и в такой же последовательности на правой руке. " +
        task + ", на каком пальце у " + female_name[1][i] + "закончится лак. В ответ запишите название пальца и руку. Если примеров несколько, ответ запишите через запятую, " +
        "например - " + fingers[rand_int(fingers.length())] + ", " + fingers[rand_int(fingers.length())];
    let output_arr = gen_output_arr(xy);
    let output = gen_output(output_arr, fingers);
    let wrong_arr = gen_wrong_arr(output_arr);
    let wrong_output = gen_output(wrong_arr, fingers);
    let explanation = "Всего у " + female_name[1][i] + "имеется 10 пальцев на руках, по 5 на каждой руке. Пронумеруем пальцы по порядку, первым будет мизинец левой руки, а последним " +
        "большой палец правой руки соответственно. Для того чтобы определить номер пальца, на котором у " + female_name[1][i] + "закончится лак, разделим количество оставшегося лака " +
        "на число, требуемое для одного пальца. Далее пока число больше или равно 10, мы будем находить остаток от деления на 10, от текущего числа. Число 0 соответствует числу 10. " +
        "Это и будет номер пальца, который " + female_name[0][i] + "успела покрасить, а значит следующий палец, который идёт по порядку " +
        "и будет нашим ответом. Например: нам дана баночка с лаком в которой " + string(xy[0][0]) + "мл лака, на один палец требуется " + string(xy[0][1]) + 
        "мл. Делим " + string(xy[0][0]) + " / " + string(xy[0][1]) + " = " + string(xy[0][0]/xy[0][1]) + ". Далее находим остаток от деления на 10 " +
        "и получаем " + string(xy[0][0]/xy[0][1]) + " % 10 = " + string((xy[0][0]/xy[0][1])%10) + ", в ответ записываем - " + fingers[output_arr[0]];
    
    return new Puzzle {
        descr: descr,
        input: input,
        output: output,
        wrong_output: wrong_output,
        explanation: explanation
    };
}

function gen_wrong_arr(arr: int[]) -> int[] {
    let out: int[] = [];
    let wrong = rand_int(arr.length());
    for (let i = 0; i < arr.length(); i += 1) {
        if (i == wrong) {
            let cur = arr[i];
            if (cur == 0) {
                cur += 1;
            } else if (cur == 9) {
                cur -= 1;
            } else {
                cur = [cur + 1, cur - 1][rand_int(2)];
            }
            out.push(cur);
            continue;
        }
        out.push(arr[i]);
    }
    return out;
}

function gen_output(arr: int[], fingers: string[]) -> string {
    let str = "";
    for (let i = 0; i < arr.length(); i += 1) {
        if (i == arr.length() - 1) {
            str += fingers[arr[i]];
            break;
        }
        str += fingers[arr[i]] + ", ";
    }
    return str;
}

function gen_output_arr(arr: int[][]) -> int[] {
    let out: int[] = [];
    for (let i = 0; i < arr.length(); i += 1) {
        let finger = arr[i][0] / arr[i][1];
        while (finger >= 10) {
            finger %= 10;
        }
        out.push(finger);
    }
    return out;
}

function gen_input(arr: int[][]) -> string {
    let str = "";
    for (let i = 0; i < arr.length(); i += 1) {
        str += "[X = " + string(arr[i][0]) + ", Y = " + string(arr[i][1]) + "]";
    }
    return str;
}

function gen_xy(level: int) -> int[][] {
    let arr: int[][] = [];
    for (let i = 0; i < level; i += 1) {
        let cur: int[] = [];
        let x = rand_int(level * 2) + 20 + level;
        let y = rand_int(5) + 1;
        cur.push(x);
        cur.push(y);
        arr.push(cur);
    }
    return arr;
}

function gen_task() -> string {
    let tasks = ["Определите","Требуется определить","Укажите","Установите","Выясните","Напишите","Определить","Указать","Установить"];
    return tasks[rand_int(tasks.length())];
}

function gen_header(index: int, arr: string[][]) -> string {
    let headers = ["Представьте что перед вами ",
                   "Вам дана ",
                   "Дана ",
                   "У " + arr[1][index] + " имеется ",
                   "У " + arr[1][index] + " есть ",
                   "У " + arr[1][index] + "в наличии "
                  ];
    return headers[rand_int(headers.length())];
}
