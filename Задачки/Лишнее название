struct Puzzle {
    descr: string,
    input: string,
    output: string,
    wrong_output: string,
}

function gen_puzzle(level: int) -> Puzzle {
    if (level > 20) {
        level = 20;
    }
    let words = [
        "абрикос ","автосервис ","газета ","галстук ","ель ","датчик ","навигатор ","динамик ","камбала ","озон ","брынза ","лось ","жгут ","завод ","воск ","иск ",
        "радар ","бисер ","кекс ","желе ","ирис ","замазка ","ночлег ","вязанка ","хурма ","замазка ","цифра ","обруч ","смета ","помпон ","ягода ","грунт ",
        "бомба ","дудка ","гудок ","дуб ","лён ","драже ","нора ","калитка ","рисунок ","белка ","кастет ","парик ","юрта ","золото ","мыло ","муравей ",
        "жижа ","стакан ","втулка ","жучка ","радио ","авто ","ирис ","лом ","гель ","ухо ","зуб ","фура ","виза ","очаг ","пар ","двор ",
        "юла ","рубашка ","багет ","рожок ","кошелёк ","знак ","трибуна ","ветка ","палица ","ферзь ","академия ","галерея ","ус ","фабрика ","деревня ","линза ",
        "икона ","йогурт ","кираса "
    ];
    let miss = rand_int(level + 3);
    let objects = gen_objects(words, level);
    let output = objects[miss];
    let miss_arr = gen_miss(objects, miss);
    let input = gen_input(miss_arr);
    let wrong_output = gen_wrong(objects, miss);
    let header = gen_header();
    let task = gen_task();
    let obj_list = gen_string(objects);
    let action = gen_action();
    let descr = header + "некоторое количество объектов и список объектов которые " +  action + "из списка. " + task + "оставшийся объект.\n" + obj_list;
    
    return new Puzzle {
        descr: descr,
        input: input,
        output: output,
        wrong_output: wrong_output
    }; 
} 

function gen_string(arr: string[]) -> string {
    let str = "";
    for (let i = 0; i < arr.length(); i += 1) {
        str += arr[i];
    }
    return str;
}

function gen_input(arr: string[]) -> string {
    let str = "";
    let map: {int: int} = {};
    for (let i = 0; i < arr.length(); i += 1) {
        let cur = rand_int(arr.length());
        while (map.contains(cur) && cur > 0) {
            cur -= 1;
        }
        while (map.contains(cur) && cur < arr.length() - 1) {
            cur += 1;
        }
        str += arr[cur];
        map[cur] = cur;
    }
    return str;
}

function gen_wrong(arr: string[], miss: int) -> string {
    let wrong = "";
    if (miss == arr.length() - 1) {
        wrong = arr[miss - 1];
    } else if (miss == 0) {
        wrong = arr[miss + 1];
    } else {
        wrong = [arr[miss - 1],arr[miss + 1]][rand_int(2)];
    }
    return wrong;
}

function gen_miss(arr: string[], miss: int) -> string[] { 
    let miss_arr: string[] = [];
    for(let i = 0; i < arr.length(); i += 1) {
        if (i == miss) {
            continue;
        }
        miss_arr.push(arr[i]);
    }
    return miss_arr;
}

function gen_objects(words: string[], level: int) -> string[] {
    let arr: string[] = [];
    let map: {int: int} = {};
    for (let i = 0; i < level + 3; i += 1) {
        let cur = rand_int(words.length());
        while (map.contains(cur) && cur < words.length() - 1) {
            cur += 1;
        }
        while (map.contains(cur) && cur > 0) {
            cur -= 1;
        }
        arr.push(words[cur]);
        map[cur] = cur;
    }
    return arr;
}

function gen_action() -> string {
    let actions = ["вычеркнули ","убрали ","исключили ","удалили "];
    return actions[rand_int(actions.length())];
}

function gen_task() -> string {
    let tasks = ["Найти ","Определить ","Записать ","Вычислите ","Укажите на ","Найдите ","Определите ","Вычислите ","Укажите ","Запишите "];
    return tasks[rand_int(tasks.length())];
}

function gen_header() -> string {
    let headers = ["Дано  ",
                   "Представлено ",
                   "Вы видите ",
                   "Перед вами ",
                   "Записано ",  
                   "Перечислено "
    ];
    return headers[rand_int(headers.length())];
}
